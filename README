OpenGL Game Engine
Christian Galvez and Alec Jackson

Current Features
Interaction with SDL to draw window
Loading Shaders
Object Loader
Global Lighting
Destroy Objects
Multiple Objects
Keyboard Bindings
GamePad Bindings
CMake Build System
Object modification (Rotation, Movement, Scaling)

Planned Features
-- Improved Usability --
Physics
Collision
Animations
Expanded Control System (Mouse and better GamePad support)
Better Lighting
Text


Design Principals
Cross Platform Support
Use of libraries that maximize platform support
Object oriented design where practical
Use of low level compiled languages (C & C++) for performance

Building
We're using cmake for cross platform support. This allows us to work across multiple platforms without to many build concerns. We're planning to create a script that will fetch the required libraries, however as of now that will need to be done manually. Check the libraries section to figure out what libraries we're using. For those new to cmake we've made a super simple script for setting things up just right for this project.

-- A note on windows support. With cmake there should be windows support, but this is untested. This may require messing around with the threading libraries to get things working right with windows.

libraries
SDL2
SDL2_mixer
SDL2_image
GLEW
glm
freetype2

How to use this
Right now we realize this isn't in the most functional place. We're working on this as a side project so progress is slow. This started as an expansion of a pong engine we wrote so we didn't properly seperate engine features and gameplay features. This is something we're working on planning on fixing while we're implementing the last of the essential features. (Text, Collision, Animation)

If you'd like to use it right now you'll probably need to do a fair amount of work on get things working as needed. Although we hope it'll provide a good starting reference for working with OpenGL.
